[{"C:\\React\\Projects\\github-projects\\todolist\\src\\index.tsx":"1","C:\\React\\Projects\\github-projects\\todolist\\src\\features\\TodolistsList\\TodolistsList.tsx":"2","C:\\React\\Projects\\github-projects\\todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"3","C:\\React\\Projects\\github-projects\\todolist\\src\\features\\TodolistsList\\tasks-reducer.ts":"4","C:\\React\\Projects\\github-projects\\todolist\\src\\components\\EditableSpan\\EditableSpan.tsx":"5","C:\\React\\Projects\\github-projects\\todolist\\src\\features\\login\\Login.tsx":"6","C:\\React\\Projects\\github-projects\\todolist\\src\\app\\App.tsx":"7"},{"size":752,"mtime":1623945269242,"results":"8","hashOfConfig":"9"},{"size":4039,"mtime":1623964694666,"results":"10","hashOfConfig":"9"},{"size":1092,"mtime":1596716576000,"results":"11","hashOfConfig":"9"},{"size":5633,"mtime":1596722126000,"results":"12","hashOfConfig":"9"},{"size":952,"mtime":1594154724000,"results":"13","hashOfConfig":"9"},{"size":4085,"mtime":1623954081614,"results":"14","hashOfConfig":"9"},{"size":2674,"mtime":1638454367364,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"37uxcn",{"filePath":"18","messages":"19","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\React\\Projects\\github-projects\\todolist\\src\\index.tsx",[],"C:\\React\\Projects\\github-projects\\todolist\\src\\features\\TodolistsList\\TodolistsList.tsx",["31","32","33","34","35","36","37","38"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state=>state.auth.isLoggedIn)\r\n\r\n\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLoggedIn) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","C:\\React\\Projects\\github-projects\\todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"C:\\React\\Projects\\github-projects\\todolist\\src\\features\\TodolistsList\\tasks-reducer.ts",["39","40"],"C:\\React\\Projects\\github-projects\\todolist\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"C:\\React\\Projects\\github-projects\\todolist\\src\\features\\login\\Login.tsx",["41"],"C:\\React\\Projects\\github-projects\\todolist\\src\\app\\App.tsx",["42","43","44","45"],{"ruleId":"46","severity":1,"message":"47","line":40,"column":8,"nodeType":"48","endLine":40,"endColumn":10,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":45,"column":8,"nodeType":"48","endLine":45,"endColumn":10,"suggestions":"51"},{"ruleId":"46","severity":1,"message":"50","line":50,"column":8,"nodeType":"48","endLine":50,"endColumn":10,"suggestions":"52"},{"ruleId":"46","severity":1,"message":"50","line":55,"column":8,"nodeType":"48","endLine":55,"endColumn":10,"suggestions":"53"},{"ruleId":"46","severity":1,"message":"50","line":60,"column":8,"nodeType":"48","endLine":60,"endColumn":10,"suggestions":"54"},{"ruleId":"46","severity":1,"message":"50","line":65,"column":8,"nodeType":"48","endLine":65,"endColumn":10,"suggestions":"55"},{"ruleId":"46","severity":1,"message":"50","line":70,"column":8,"nodeType":"48","endLine":70,"endColumn":10,"suggestions":"56"},{"ruleId":"46","severity":1,"message":"50","line":75,"column":8,"nodeType":"48","endLine":75,"endColumn":10,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":5,"column":9,"nodeType":"60","messageId":"61","endLine":5,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":13,"column":94,"nodeType":"64","messageId":"65","endLine":13,"endColumn":96},{"ruleId":"66","severity":1,"message":"67","line":60,"column":32,"nodeType":"68","endLine":60,"endColumn":49},{"ruleId":"58","severity":1,"message":"69","line":20,"column":10,"nodeType":"60","messageId":"61","endLine":20,"endColumn":23},{"ruleId":"58","severity":1,"message":"70","line":20,"column":25,"nodeType":"60","messageId":"61","endLine":20,"endColumn":33},{"ruleId":"58","severity":1,"message":"71","line":21,"column":10,"nodeType":"60","messageId":"61","endLine":21,"endColumn":17},{"ruleId":"46","severity":1,"message":"72","line":35,"column":8,"nodeType":"48","endLine":35,"endColumn":10,"suggestions":"73"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["74"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["75"],["76"],["77"],["78"],["79"],["80"],["81"],"@typescript-eslint/no-unused-vars","'setAppErrorAC' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'BrowserRouter' is defined but never used.","'Redirect' is defined but never used.","'loginTC' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["82"],{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"85","fix":"87"},{"desc":"85","fix":"88"},{"desc":"85","fix":"89"},{"desc":"85","fix":"90"},{"desc":"85","fix":"91"},{"desc":"85","fix":"92"},{"desc":"85","fix":"93"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"94","text":"95"},"Update the dependencies array to be: [dispatch]",{"range":"96","text":"97"},{"range":"98","text":"97"},{"range":"99","text":"97"},{"range":"100","text":"97"},{"range":"101","text":"97"},{"range":"102","text":"97"},{"range":"103","text":"97"},{"range":"104","text":"97"},[1332,1334],"[demo, dispatch, isLoggedIn]",[1503,1505],"[dispatch]",[1674,1676],[1879,1881],[2092,2094],[2293,2295],[2440,2442],[2619,2621],[1279,1281]]